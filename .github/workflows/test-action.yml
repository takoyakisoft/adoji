# ワークフロー名
name: "プルリクエスト時のテスト"

# ワークフローが実行されるトリガー
on: [pull_request]

# このワークフローは、Tauriアプリをどこにもアップロードせずにビルドします。

jobs:
  test-tauri:
    strategy:
      fail-fast: false
      matrix:
        include:
          # ARMベースのMac (M1以降) 用
          - platform: "macos-latest"
            args: "--target aarch64-apple-darwin"
          # IntelベースのMac用
          - platform: "macos-latest"
            args: "--target x86_64-apple-darwin"
          # Ubuntu用 (Tauri v1の場合は ubuntu-20.04 に置き換え可能)
          - platform: "ubuntu-22.04"
            args: ""
          # Windows用
          - platform: "windows-latest"
            args: ""

    runs-on: ${{ matrix.platform }}
    steps:
      # リポジトリのコードをチェックアウト
      - uses: actions/checkout@v4

      # bunのセットアップ
      - name: bunのセットアップ
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      # Rustの安定版をインストール
      - name: Rust stableのインストール
        uses: dtolnay/rust-toolchain@stable
        with:
          # これらのターゲットはmacOSランナーでのみ使用されるため、
          # if条件でWindowsとLinuxのビルドをわずかに高速化しています。
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      # 依存関係のインストール (Ubuntuのみ)
      - name: 依存関係のインストール (Ubuntuのみ)
        if: matrix.platform == 'ubuntu-22.04' # 上記で定義したプラットフォームの値と一致させる必要があります。
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0はTauri v1用、webkitgtk 4.1はTauri v2用です。
        # アプリに適用されない方を削除すると、ワークフローが少し速くなります。

      # フロントエンドの依存関係をインストール
      - name: フロントエンドの依存関係をインストール
        run: bun install # あなたが使用しているものに応じて、npm, pnpm, yarnなどに変更してください。

      # tauri-action を使用してビルドを実行
      # tagNameとreleaseIdを省略すると、tauri-actionはアプリをビルドするだけで、アセットのアップロードは試みません。
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: ${{ matrix.args }}